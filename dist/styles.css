/* LeanX Design System v1.1.0 */
/* https://github.com/iqbalrahmanlean/leanx-design-system */

/* Base Styles */
:root {
  --background: 0 0% 100%;
  --foreground: 222.2 84% 4.9%;
  --primary: 222.2 47.4% 11.2%;
  --primary-foreground: 210 40% 98%;
  --secondary: 210 40% 96%;
  --secondary-foreground: 222.2 84% 4.9%;
  --destructive: 0 84.2% 60.2%;
  --destructive-foreground: 210 40% 98%;
  --border: 214.3 31.8% 91.4%;
  --input: 214.3 31.8% 91.4%;
  --ring: 222.2 84% 4.9%;
  --radius: 0.5rem;
}

body {
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
}


/* Button Component */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  border-radius: calc(var(--radius, 0.375rem) - 2px);
  font-size: 0.875rem;
  font-weight: 500;
  transition: all 0.2s;
  cursor: pointer;
  border: 1px solid transparent;
  outline: none;
  height: 2.5rem;
  padding: 0 1rem;
}

.btn-default {
  background-color: #000;
  color: #fff;
}

.btn-default:hover {
  background-color: rgba(0, 0, 0, 0.9);
}

.btn-secondary {
  background-color: #f1f5f9;
  color: #0f172a;
  border: 1px solid #e2e8f0;
}

.btn-outline {
  border: 1px solid #e2e8f0;
  background-color: transparent;
  color: #0f172a;
}

.btn-destructive {
  background-color: #ef4444;
  color: #fff;
}

.btn-sm {
  height: 2.25rem;
  padding: 0 0.75rem;
}

.btn-lg {
  height: 2.75rem;
  padding: 0 2rem;
}


/* Input Component */
.input {
  display: flex;
  height: 2.5rem;
  width: 100%;
  border-radius: calc(var(--radius, 0.375rem) - 2px);
  border: 1px solid #e2e8f0;
  background-color: #fff;
  padding: 0.5rem 0.75rem;
  font-size: 0.875rem;
  color: #0f172a;
}

.input:focus {
  outline: none;
  border-color: #3b82f6;
  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.1);
}

.input::placeholder {
  color: #64748b;
}


/* Card Component */
.card {
  border-radius: calc(var(--radius, 0.375rem) - 2px);
  border: 1px solid #e2e8f0;
  background-color: #fff;
  color: #0f172a;
  box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
}

.card-header {
  padding: 1.5rem;
}

.card-title {
  font-size: 1.125rem;
  font-weight: 600;
  margin: 0 0 0.5rem 0;
}

.card-description {
  font-size: 0.875rem;
  color: #64748b;
  margin: 0;
}

.card-content {
  padding: 0 1.5rem 1.5rem 1.5rem;
}

.card-footer {
  padding: 0 1.5rem 1.5rem 1.5rem;
}


/* Badge Component */
.badge {
  display: inline-flex;
  align-items: center;
  border-radius: 9999px;
  border: 1px solid transparent;
  padding: 0.125rem 0.625rem;
  font-size: 0.75rem;
  font-weight: 600;
  line-height: 1;
  white-space: nowrap;
}

.badge-default {
  background-color: #000;
  color: #fff;
}

.badge-secondary {
  background-color: #f1f5f9;
  color: #0f172a;
  border: 1px solid #e2e8f0;
}

.badge-destructive {
  background-color: #ef4444;
  color: #fff;
}

.badge-outline {
  border: 1px solid #e2e8f0;
  color: #0f172a;
}


/* Alert Component */
.alert {
  position: relative;
  width: 100%;
  border-radius: calc(var(--radius, 0.5rem) - 2px);
  border: 1px solid hsl(var(--border));
  padding: 0.75rem 1rem;
  font-size: 0.875rem;
  display: grid;
  grid-template-columns: auto 1fr;
  gap: 0.75rem;
  align-items: flex-start;
}

.alert-default {
  background-color: hsl(var(--card));
  color: hsl(var(--card-foreground));
}

.alert-destructive {
  color: hsl(var(--destructive));
  background-color: hsl(var(--card));
  border-color: hsl(var(--destructive) / 0.2);
}

.alert-icon {
  width: 1rem;
  height: 1rem;
  margin-top: 0.125rem;
  color: currentColor;
}

.alert-title {
  font-weight: 500;
  line-height: 1;
  margin: 0 0 0.25rem 0;
  font-size: 0.875rem;
}

.alert-description {
  color: hsl(var(--muted-foreground));
  font-size: 0.875rem;
  line-height: 1.5;
  margin: 0;
}

.alert-destructive .alert-description {
  color: hsl(var(--destructive) / 0.9);
}


/* Checkbox Component */
.checkbox {
  width: 1rem;
  height: 1rem;
  flex-shrink: 0;
  border-radius: 4px;
  border: 1px solid hsl(var(--border));
  background-color: transparent;
  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  transition: all 0.2s;
  outline: none;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.checkbox:focus-visible {
  border-color: hsl(var(--ring));
  outline: 2px solid transparent;
  box-shadow: 0 0 0 3px hsl(var(--ring) / 0.5);
}

.checkbox:checked {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  border-color: hsl(var(--primary));
}

.checkbox:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

.checkbox-icon {
  width: 0.875rem;
  height: 0.875rem;
  color: currentColor;
  display: none;
}

.checkbox:checked .checkbox-icon {
  display: block;
}

/* For browsers that support :has() */
.checkbox:has(input:checked) {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  border-color: hsl(var(--primary));
}

.checkbox:has(input:checked) .checkbox-icon {
  display: block;
}


/* Textarea Component */
.textarea {
  display: flex;
  min-height: 4rem;
  width: 100%;
  border-radius: calc(var(--radius, 0.375rem) - 2px);
  border: 1px solid hsl(var(--border));
  background-color: transparent;
  padding: 0.5rem 0.75rem;
  font-size: 0.875rem;
  color: hsl(var(--foreground));
  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  transition: border-color 0.2s, box-shadow 0.2s;
  outline: none;
  resize: vertical;
  font-family: inherit;
}

.textarea::placeholder {
  color: hsl(var(--muted-foreground));
}

.textarea:focus {
  border-color: hsl(var(--ring));
  box-shadow: 0 0 0 3px hsl(var(--ring) / 0.5);
}

.textarea:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

.textarea[aria-invalid="true"] {
  border-color: hsl(var(--destructive));
  box-shadow: 0 0 0 3px hsl(var(--destructive) / 0.2);
}

@media (min-width: 768px) {
  .textarea {
    font-size: 0.875rem;
  }
}


/* Switch Component */
.switch {
  display: inline-flex;
  height: 1.15rem;
  width: 2rem;
  flex-shrink: 0;
  align-items: center;
  border-radius: 9999px;
  border: 1px solid transparent;
  background-color: hsl(var(--input));
  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  transition: all 0.2s;
  outline: none;
  cursor: pointer;
  position: relative;
}

.switch:focus-visible {
  border-color: hsl(var(--ring));
  box-shadow: 0 0 0 3px hsl(var(--ring) / 0.5);
}

.switch:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

.switch[data-state="checked"] {
  background-color: hsl(var(--primary));
}

.switch-thumb {
  pointer-events: none;
  display: block;
  width: 1rem;
  height: 1rem;
  border-radius: 9999px;
  background-color: hsl(var(--background));
  ring: 0;
  transition: transform 0.2s;
  transform: translateX(0);
}

.switch[data-state="checked"] .switch-thumb {
  transform: translateX(calc(100% - 2px));
  background-color: hsl(var(--primary-foreground));
}

/* For browsers that support :has() */
.switch:has(input:checked) {
  background-color: hsl(var(--primary));
}

.switch:has(input:checked) .switch-thumb {
  transform: translateX(calc(100% - 2px));
  background-color: hsl(var(--primary-foreground));
}


/* Separator Component */
.separator {
  background-color: hsl(var(--border));
  flex-shrink: 0;
}

.separator-horizontal {
  height: 1px;
  width: 100%;
}

.separator-vertical {
  height: 100%;
  width: 1px;
}
